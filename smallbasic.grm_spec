

========================

Stmt := ID = Expr CR
     |  If ( CondExpr ) Then CR Stmts MoreThanZeroElseIf  

              // If ( CondExpr ) Then CR Stmts 
              //   { ElseIf ( CondExpr ) Then Stmts }* 
              //   { Else CR Stmts } EndIf CR

     |  While ( CondExpr ) Then CR Stmts EndWhile CR
     |  ID : CR
     |  Goto ID CR
     |  For ID = Expr To Expr OptStep CR Stmts EndFor CR
     |  Sub ID CR Stmts EndSub CR
     |  Expr

MoreThanZeroElseIf
     := OptionalElse
     |  ElseIf ( CondExpr ) Then CR Stmts MoreThanZeroElseIf

OptionalElse
     := EndIf CR
     |  Else CR Stmts EndIf CR

Stmts
     := CR                  // 빈 라인
     |  MoreThanOneStmt

MoreThanOneStmt
     := Stmt CR
     |  Stmt CR MoreThanOneStmt

OptStep 
     :=
     |  Step Expr


========================

CondExpr := OrExpr

OrExpr  := OrExpr Or AndExpr
        |  AndExpr

AndEpxr := AndExpr And EqNeqExpr
        |  EqNeqExpr


EqNeqExpr
        :=  Expr = Expr
        |   Expr <> Expr
        |   CompExpr = CompExpr
        |   CompExpr <> CompExpr
        |   CompExpr

CompExpr 
        := Expr < Expr
        |  Expr <= Expr
        |  Expr > Expr
        |  Expr >= Expr
        |  AtomicCondExpr


AtomicCondExpr 
        := ( CondExpr )
        |  "true"
        |  "false"

========================

Expr  := PMExpr

PMExpr := PMExpr + MDExpr
       |  PMExpr - MDExpr
       |  MDExpr

MDExpr := MDExpr * UMExpr
       |  MDExpr / UMExpr
       |  UMExpr

UMExpr := - AtomicExpr
       |  AtomicExpr

AtomicExpr 
       := ( Expr )
       | NUM
       | ID
       | ID . ID
       | ID . ID ( Exprs )
       | ID ( )


Exprs :=        // 비어 있는 것
      |  MoreThanOneExprs

MoreThanOneExprs
      := Expr
      |  Expr , MoreThanOneExprs

========================

